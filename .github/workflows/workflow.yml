on: [push]

# Environment variables available to all jobs and steps in this workflow
env:
  REGISTRY_NAME: dstidevops
  CLUSTER_NAME: dsti-devops-cluster-manuel
  CLUSTER_RESOURCE_GROUP: DSTI-DevOps-Project
  SECRET: acr-secret
  NAMESPACE: fibcalculator
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
    
    # Connect to Azure Container Registry (ACR)
    - uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }} 
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    # Container build and push to a Azure Container Registry (ACR)
    - run: |
        docker build -t ${{ env.REGISTRY_NAME }}.azurecr.io/multi-client-k8s:${{ github.sha }} -f ./multi-k8s/client/Dockerfile ./multi-k8s/client
        docker build -t ${{ env.REGISTRY_NAME }}.azurecr.io/multi-server-k8s:${{ github.sha }} -f ./multi-k8s/server/Dockerfile ./multi-k8s/server
        docker build -t ${{ env.REGISTRY_NAME }}.azurecr.io/multi-worker-k8s:${{ github.sha }} -f ./multi-k8s/worker/Dockerfile ./multi-k8s/worker

        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/multi-client-k8s:${{ github.sha }}
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/multi-server-k8s:${{ github.sha }}
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/multi-worker-k8s:${{ github.sha }} 

    # Set the target Azure Kubernetes Service (AKS) cluster. 
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    
    # Create namespace if doesn't exist
    - run: kubectl create namespace ${{ env.NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -
    
    # Create image pull secret for ACR
    - uses: azure/k8s-create-secret@v1
      with:
        container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
        container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
        container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        secret-name: ${{ env.SECRET }}
        namespace: ${{ env.NAMESPACE }}
        arguments: --force true  
        
    # Deploy app to AKS
    - uses: azure/k8s-deploy@v1.4
      with:
        manifests: |
            multi-k8s/k8s/client-cluster-ip-service.yaml
            multi-k8s/k8s/client-deployment.yaml
            multi-k8s/k8s/database-persistent-volume-claim.yaml
            multi-k8s/k8s/ingress-service.yaml
            multi-k8s/k8s/postgres-cluster-ip-service.yaml
            multi-k8s/k8s/redis-cluster-ip-service.yaml
            multi-k8s/k8s/redis-deployment.yaml
            multi-k8s/k8s/server-cluster-ip-service.yaml
            multi-k8s/k8s/server-deployment.yaml
            multi-k8s/k8s/worker-deployment.yaml
        images: |
          ${{ env.REGISTRY_NAME }}.azurecr.io/multi-client-k8s:${{ github.sha }}
          ${{ env.REGISTRY_NAME }}.azurecr.io/multi-worker-k8s:${{ github.sha }}
          ${{ env.REGISTRY_NAME }}.azurecr.io/multi-server-k8s:${{ github.sha }}
          ${{ env.REGISTRY_NAME }}.azurecr.io/postgres:latest
        imagepullsecrets: |
          ${{ env.SECRET }}
        namespace: ${{ env.NAMESPACE }}